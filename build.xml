<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"  basedir="." default="build" name="RestFlow">

	<property environment="env" />
	<property file="ivy.properties" />
	<property name="debug.level" value="source,lines,vars" />
	<property name="source.java.version" value="1.6" />
	<property name="target.java.version" value="1.6" />

	<property name="dependency.jar.dir" value="lib" />
	<property name="ant.dest.dir" value="classes" />
	<property name="main.dest.dir" value="classes/main" />
	<property name="test.dest.dir" value="classes/test" />
	<property name="ant.target.dir" value="target" />
	<property name="main.src.dir" value="src/main/java" />
	<property name="main.resources.dir" value="src/main/resources" />
	<property name="test.src.dir" value="src/test/java" />
	<property name="test.resources.dir" value="src/test/resources" />

	<taskdef resource="org/apache/ivy/ant/antlib.xml"
	    uri="antlib:org.apache.ivy.ant" classpath="${ivyjar}" />

	<path id="compile.test.classpath">
		<pathelement location="${main.dest.dir}"/>
		<fileset dir="${dependency.jar.dir}">
			<include name="test/*.jar"/>
		</fileset>
		<fileset dir=".">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="compile.runtime.classpath">
		<fileset dir="${dependency.jar.dir}">
			<include name="runtime/*.jar"/>
		</fileset>
		<fileset dir=".">
			<include name="*.jar"/>
		</fileset>
	</path>

    <target name="help" description="--> equivalent to 'ant -projecthelp' or 'ant -p'">
        <java classname="org.apache.tools.ant.Main">
            <arg value="-projecthelp"/>
        </java>
    </target>

	<target name="clean" description="--> deletes the compiled class directories and ivy-mananged jars">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${ant.dest.dir}" />
			<fileset dir="${ant.target.dir}" />
			<fileset dir="${dependency.jar.dir}" />
		</delete>
	</target>
	
	<target name="init">
		<mkdir dir="${ant.target.dir}" />
		<mkdir dir="${main.dest.dir}" />
		<mkdir dir="${test.dest.dir}" />
	</target>

	<target name="resolve" depends="init" description="--> retrieves dependencies using ivy">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dependency.jar.dir}" />
		</delete>
		<ivy:retrieve sync="true"  pattern="${dependency.jar.dir}/[conf]/[artifact].[ext]" />
		<ivy:report conf="runtime" dot="true"/>
	</target>

	<target name="compile-main" depends="init" description="--> compiles the main java sources without resolving dependencies">
		<javac debug="true" debuglevel="${debug.level}" destdir="${main.dest.dir}" source="${source.java.version}" target="${target.java.version}" includeantruntime="false">
			<src path="${main.src.dir}" />
			<classpath refid="compile.runtime.classpath" />
		</javac>
	</target>
	
	<target name="compile-test" depends="compile-main" description="--> compiles the test java sources without resolving dependencies">
		<javac debug="true" debuglevel="${debug.level}" destdir="${test.dest.dir}" source="${source.java.version}" target="${target.java.version}" includeantruntime="false">
			<src path="${test.src.dir}" />
			<classpath refid="compile.test.classpath" />
		</javac>
	</target>

	<target name="compile" depends="compile-main,compile-test" description="--> compiles the main and test java sources without resolving dependencies"/>

    <target name="build-main" depends="resolve,compile-main" description="--> builds the main java sources"/>
	
	<target name="build-test" depends="resolve,compile-test" description="--> builds the test java sources" />

	<target name="build" depends="build-main,build-test" description="--> builds the main and test java sources"/>
 
    <target name="jar" depends="build" description="--> creates a jar comprising the main classes and resources">
		<jar destfile="${ant.target.dir}/RestFlow-min.jar" filesetmanifest="merge">
			<fileset dir="${main.dest.dir}" />
			<fileset dir="${main.resources.dir}" />
		</jar>
	</target>

	<target name="ivy-new-version" depends="init" unless="ivy.new.revision">
		<ivy:info file="ivy.xml" />
		<!-- asks Ivy for an available version number -->
		<ivy:buildnumber 
			organisation="${ivy.organisation}" module="${ivy.module}" revSep="" revision="${ivy.revision}."/>
	</target>

	<target name="publish" depends="ivy-new-version,jar"  description="--> creates and publishes a jar with a new revision number">
        <copy file="${ant.target.dir}/RestFlow-min.jar" toFile="${ant.target.dir}/RestFlow-min-${ivy.new.revision}.jar" />
		<ivy:publish resolver="workspace" pubrevision="${ivy.new.revision}" status="integration" update="true" overwrite="true" conf="runtime">
			<artifacts pattern="target/[artifact]-min-[revision].[ext]" />
		</ivy:publish>
	</target>

	<target name="standalonejar" depends="build" description="--> creates a jar comprising the main classes, resources and dependencies">
		<jar destfile="${ant.target.dir}/RestFlow-standalone.jar" manifest="src/main/resources/Manifest.txt" filesetmanifest="merge">
			<fileset dir="${main.dest.dir}" />
			<fileset dir="${main.resources.dir}" />
			<zipgroupfileset dir="${dependency.jar.dir}">
				<include name="**/*.jar"/>
			</zipgroupfileset>
		</jar>
	</target>

	<target name="publish-standalonejar" depends="ivy-new-version,standalonejar"  description="--> creates a standalone jar with a new revision number">
        <copy file="${ant.target.dir}/RestFlow-standalone.jar" toFile="${ant.target.dir}/RestFlow-standalone-${ivy.new.revision}.jar" />
	</target>

</project>
