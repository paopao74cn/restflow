namespace:

  module: Visualize

imports:

- classpath:/common/java/actors.yaml
- classpath:/common/directors.yaml
- classpath:/common/types.yaml 
- classpath:/common/support.yaml

types:

components:

- id: WorkflowHierarchy
  type: Workflow
  properties: 
    director: !ref PublishSubscribeDirector
    inputs:
      workflowName:
      restflowFile:
    nodes:
    - !lref Inputs  
    - !lref WorkflowLoader
    - !lref GenerateHierarchy

- id: Inputs
  type: InPortal
  properties:
    outflows:
      workflowName: /workflowName/
      restflowFile: /restflowFile/


- id: WorkflowLoader
  type: Node
  properties:
    maxConcurrency: 1
    ordered: false
    actor: !inline 
      type: ActorLoader
    constants:      
      director: !ref PublishSubscribeDirector
      runDirectory: context:/run   
    inflows:
      actorName: /workflowName/
      restflowFile: /restflowFile
      importMap: context:/import-map
    outflows:
      actor: /actor/{actorName}
    exceptions:
      java.lang.Exception: stderr:/exception/load/


- id: GenerateHierarchy
  type: Node
  properties:
    maxConcurrency: 1
    actor: !inline
      className: org.restflow.actors.GroovyTemplateActor
    actor.usesStepDirectory: true      
    constants:
      _template: |
        <%
        def generateHierarchy (actor) {
          println "<ul>"
          actor.nodes.each() { node ->
            if ( node.hidden ) return;
            if ( node instanceof org.restflow.nodes.InPortal ) return;
            if ( node instanceof org.restflow.nodes.OutPortal ) return;
            if ( node instanceof org.restflow.nodes.NonDeterministicMerge ) return;
            println "<li>"
            println node.beanName;
            println "<i>"
            println node.actor.beanName;
            println "</i>"
            if ( node.actor instanceof org.restflow.actors.Workflow ) {
               generateHierarchy(node.actor);
            } else {
            }
            println "</li>"
          }
          println "</ul>"
        }
        println "<h3>$workflow.beanName</h3>"
        
        generateHierarchy(workflow);
        %>
    inflows:
      workflow: /actor/{actorName}
    outflows:
      structure: file:/hierarchy/{actorName}/
    exceptions:
      java.lang.Exception: stderr:/exception/generateDot/

